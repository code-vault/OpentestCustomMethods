package org.getopentest.selenium;

import java.util.List;
import java.util.stream.Collectors;
import org.getopentest.annotations.TestActionArgument;
import org.getopentest.annotations.TestActionClass;
import org.getopentest.annotations.Type;
import org.getopentest.selenium.core.ElementWrapper;
import org.getopentest.selenium.core.SeleniumTestAction;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

@TestActionClass(description = "Collects and returns a list of UI elements.")
@TestActionArgument(
        name = "locator", type = Type.OBJECT, optional = false,
        description = "Locator object that identifies the elements to return.")

public class GetElements extends SeleniumTestAction {

    @Override
    public void run() {
        super.run();

        By locator = this.readLocatorArgument("locator");

        this.waitForAsyncCallsToFinish();

        List<WebElement> elements = this.getElements(locator);
        List<ElementWrapper> wrappedElements = elements
                .stream()
                .map(e -> new ElementWrapper(e))
                .collect(Collectors.toList());
        this.writeOutput("elements", this.getActor().toJsArray(wrappedElements));
    }
}
