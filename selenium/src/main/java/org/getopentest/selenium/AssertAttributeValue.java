package org.getopentest.selenium;

import java.util.regex.Pattern;
import org.getopentest.selenium.core.CustomConditions;
import org.getopentest.selenium.core.SeleniumTestAction;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.WebDriverWait;

public class AssertAttributeValue extends SeleniumTestAction {

    @Override
    public void run() {

        super.run();

        By locator = this.readLocatorArgument("locator");
        String attribute = this.readStringArgument("attribute");
        String attributeValue = this.readStringArgument("value", null);
        String valueContains = this.readStringArgument("valueContains", null);
        Pattern valueMatches = this.readRegexArgument("valueMatches", null);
        boolean caseInsensitive = this.readBooleanArgument("caseInsensitive", false);

        this.waitForAsyncCallsToFinish();

        WebElement element = this.getElement(locator);

        WebDriverWait wait = new WebDriverWait(this.driver, this.getExplicitWaitSec());

        try {
                if (attributeValue != null) {
                wait.until(CustomConditions.elementAttributeToBe(element, attribute, attributeValue, caseInsensitive));
            } else if (valueContains != null) {
                wait.until(CustomConditions.elementAttributeToContain(element, attribute, valueContains, caseInsensitive));
            } else if (valueMatches != null) {
                wait.until(CustomConditions.elementAttributeToMatch(element, attribute, valueMatches));
            } else {
                throw new RuntimeException(
                        "You must provide at least one of the following arguments: "
                        + "text, textContains, textMatches.");
            }
        } catch (Exception ex) {
            throw new RuntimeException(String.format(
                    "Failed to validate the value of attribute \"%s\". The attribute's value was \"%s\".",
                    attribute,
                    element.getAttribute(attribute)), ex);
        }
    }
}
