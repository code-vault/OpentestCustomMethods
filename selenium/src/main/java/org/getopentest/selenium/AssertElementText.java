package org.getopentest.selenium;

import java.util.regex.Pattern;
import org.getopentest.selenium.core.CustomConditions;
import org.getopentest.selenium.core.SeleniumTestAction;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.WebDriverWait;

public class AssertElementText extends SeleniumTestAction {

    @Override
    public void run() {

        super.run();

        By locator = this.readLocatorArgument("locator");
        String text = this.readStringArgument("text", null);
        String textContains = this.readStringArgument("textContains", null);
        Pattern textMatches = this.readRegexArgument("textMatches", null);
        boolean caseInsensitive = this.readBooleanArgument("caseInsensitive", false);

        this.waitForAsyncCallsToFinish();

        WebElement element = this.getElement(locator);

        WebDriverWait wait = new WebDriverWait(this.driver, this.getExplicitWaitSec());

        if (text != null) {
            wait.until(CustomConditions.elementTextToBe(element, text, caseInsensitive));
        } else if (textContains != null) {
            wait.until(CustomConditions.elementTextToContain(element, textContains, caseInsensitive));
        } else if (textMatches != null) {
            wait.until(CustomConditions.elementTextToMatch(element, textMatches));
        } else {
            throw new RuntimeException(
                    "You must provide at least one of the following arguments: "
                    + "text, textContains, textMatches.");
        }

    }
}
