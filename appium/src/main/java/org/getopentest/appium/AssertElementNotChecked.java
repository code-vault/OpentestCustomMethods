package org.getopentest.appium;

import io.appium.java_client.MobileElement;
import org.getopentest.annotations.TestActionArgument;
import org.getopentest.annotations.TestActionClass;
import org.getopentest.annotations.Type;
import org.getopentest.appium.core.SwipingAction;
import org.openqa.selenium.By;

@TestActionClass(
        description = "Verifies that a UI element's checked attribute "
        + "is false.")
@TestActionArgument(name = "locator", type = Type.MAP, optional = false,
        description = "The locator of the UI element.")
@TestActionArgument(name = "swipe", type = Type.STRING, optional = true,
        description = "Specifies whether the test actor should perform swipe"
        + " gestures to find the element in case it is not currently visible."
        + " Valid values are: up, down, left, right, none.")

/**
 * Verifies that a UI element's checked attribute is false.
 */
public class AssertElementNotChecked extends SwipingAction {

    @Override
    public void run() {
        super.run();

        By locator = this.readLocatorArgument("locator");

        this.swipeAndCheckElementVisible(locator, this.getSwipeOptions());

        MobileElement element = this.getElement(locator);

        String checkedState = element.getAttribute("checked");
        if (!checkedState.equalsIgnoreCase("false")) {
            throw new RuntimeException(String.format(
                    "Expected element's checked state to be \"false\", but it was"
                    + "found to be \"%s\"", checkedState));
        }
    }
}
