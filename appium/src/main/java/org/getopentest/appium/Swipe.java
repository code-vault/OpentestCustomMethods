package org.getopentest.appium;

import org.getopentest.appium.core.AppiumTestAction;
import org.getopentest.appium.core.SwipeOptions;
import org.openqa.selenium.By;

public class Swipe extends AppiumTestAction {

    @Override
    public void run() {
        super.run();

        // The reason for the ugly code below is to support the alias
        // "swipe" for the "direction" argument
        String direction = this.readStringArgument("swipe", null);
        if (direction == null) {
            direction = this.readStringArgument("direction");
        }
        By targetElement = this.readLocatorArgument("target", null);
        Integer durationMs = this.readIntArgument("durationMs", 1000);
        By swipeContainer = this.readLocatorArgument("swipeContainer", null);
        Boolean swipeToEdge = this.readBooleanArgument("swipeToEdge", false);
        Integer maxEdgeCheckRetries = this.readIntArgument("maxEdgeCheckRetries", 1);
        Integer maxSwipes = this.readIntArgument("maxSwipes", 20);
        Double defaultVerticalOffset = (swipeContainer == null) ? 0.2 : 0.1;
        Double offsetBottom = this.readDoubleArgument("offsetBottom", defaultVerticalOffset);
        Double offsetLeft = this.readDoubleArgument("offsetLeft", 0.1);
        Double offsetRight = this.readDoubleArgument("offsetRight", 0.1);
        Double offsetTop = this.readDoubleArgument("offsetTop", defaultVerticalOffset);

        SwipeOptions options = new SwipeOptions();
        options.swipeContainer = swipeContainer;
        options.direction = direction;
        options.durationMs = durationMs;
        options.maxEdgeCheckRetries = maxEdgeCheckRetries;
        options.maxSwipes = maxSwipes;
        options.offsetBottom = offsetBottom;
        options.offsetLeft = offsetLeft;
        options.offsetRight = offsetRight;
        options.offsetTop = offsetTop;
        options.swipeToEdge = swipeToEdge;
        options.targetElement = targetElement;

        this.swipe(options);
    }
}
