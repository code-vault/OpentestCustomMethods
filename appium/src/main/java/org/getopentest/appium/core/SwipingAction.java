package org.getopentest.appium.core;

import org.getopentest.annotations.TestActionArgument;
import org.getopentest.annotations.Type;
import org.openqa.selenium.By;

@TestActionArgument(name = "swipe", type = Type.STRING, optional = true,
        description = "The direction to swipe towards, in case the element is not visible "
        + "on the screen and we need to be look for it in a scrollable container. "
        + "Valid values are: up, down, left, right and none. Default: none.")
@TestActionArgument(name = "swipeContainer", type = Type.LOCATOR, optional = true,
        description = "")
@TestActionArgument(name = "swipeDurationMs", type = Type.INTEGER, optional = true,
        description = "")
/*
 * Base class for actions that need the ability to read the swipe-related
 * arguments.
 */
public abstract class SwipingAction extends AppiumTestAction {

    /**
     * Returns a SwipeOptions instance, pre-populated with default values and
     * overridden with the values read from the action's swipe-related
     * arguments.
     */
    public SwipeOptions getSwipeOptions() {
        By swipeContainer = this.readLocatorArgument("swipeContainer",
                this.readLocatorArgument("containerLocator", null));

        SwipeOptions options = new SwipeOptions();
        options.condition = Condition.VISIBILITY;
        options.direction = this.readStringArgument("swipe",
                this.readStringArgument("direction", "none"));
        options.durationMs = this.readIntArgument("swipeDurationMs", null);
        options.maxEdgeCheckRetries = this.readIntArgument("swipeMaxEdgeCheckRetries", 1);
        options.maxSwipes = this.readIntArgument("maxSwipes", options.maxSwipes);

        Double defaultVerticalOffset = (swipeContainer == null) ? 0.2 : 0.1;
        options.offsetBottom = this.readDoubleArgument("swipeOffsetBottom", defaultVerticalOffset);
        options.offsetLeft = this.readDoubleArgument("swipeOffsetLeft", 0.1);
        options.offsetRight = this.readDoubleArgument("swipeOffsetRight", 0.1);
        options.offsetTop = this.readDoubleArgument("swipeOffsetTop", defaultVerticalOffset);

        options.swipeContainer = swipeContainer;
        options.swipeExplicitWaitSec = this.readIntArgument("swipeExplicitWaitSec", 1);

        return options;
    }
}
