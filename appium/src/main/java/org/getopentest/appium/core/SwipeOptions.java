package org.getopentest.appium.core;

import org.getopentest.util.Config;
import org.openqa.selenium.By;

/**
 * Stores all information necessary to perform a swipe (the swipe direction, the
 * element to look for while swiping, what is the swipe container element and
 * the offsets from the sides of its edges, etc.).
 */
public class SwipeOptions {

    /**
     * The condition to check on the target UI element while swiping.
     */
    public Condition condition;

    /**
     * The direction to swipe towards (up, down, left, right, none).
     */
    public String direction;

    /**
     * The duration of the swipe gesture, in milliseconds.
     */
    public Integer durationMs;

    /**
     * The maximum number of times we will check to verify that we reached the
     * end of the page (by examining the page source). We normally need one
     * single check, but in some scenarios the elements on the screen can look
     * the same between two consecutive swipes, so we need to check multiple
     * times to make sure we reached the edge.
     */
    public Integer maxEdgeCheckRetries;

    /**
     * The maximum number of swipe gestures allowed in search of the target
     * element (or edge) before we give up.
     */
    public Integer maxSwipes;

    /**
     * The percentage of the swipe container height that the swipe gesture will
     * start or end at, from the bottom side of the container.
     */
    public Double offsetBottom;

    /**
     * The percentage of the swipe container width that the swipe gesture will
     * start or end at, from the left side of the container.
     */
    public Double offsetLeft;

    /**
     * The percentage of the swipe container width that the swipe gesture will
     * start or end at, from the right side of the container.
     */
    public Double offsetRight;

    /**
     * The percentage of the swipe container height that the swipe gesture will
     * start or end at, from the top side of the container.
     */
    public Double offsetTop;

    /**
     * The UI element that the swipe gesture will be executed into. All
     * coordinate calculations are going to be performed relative to the
     * position and size of the swipe container element.
     */
    public By swipeContainer;

    /**
     * The number of seconds to wait between two successive swipe gestures while
     * in search of the target element (or edge).
     */
    public Integer swipeExplicitWaitSec;

    /**
     * The UI element that we are looking for as we are swiping. The swipe will
     * stop as soon as we have found this element.
     */
    public By targetElement;

    /**
     * When true, causes the swipe to continue until it reaches the edge of the
     * swipe container.
     */
    public boolean swipeToEdge;

    public SwipeOptions() {
        Config config = AppiumHelper.getConfig();

        this.condition = Condition.VISIBILITY;
        this.swipeContainer = null;
        this.direction = "none";
        this.durationMs = 1000;
        this.maxEdgeCheckRetries = 1;
        this.maxSwipes = config.getInteger("appium.maxSwipes", config.getInteger("appium.maxSwipeCount", 20));
        this.offsetBottom = 0.2;
        this.offsetLeft = 0.1;
        this.offsetRight = 0.1;
        this.offsetTop = 0.2;
        this.targetElement = null;
        this.swipeToEdge = false;
        this.swipeExplicitWaitSec = 1;
    }
}
